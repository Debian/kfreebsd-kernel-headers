--- a/sys/sys/_sigset.h
+++ b/sys/sys/_sigset.h
@@ -48,9 +48,11 @@
 #define	_SIG_BIT(sig)	(1 << (_SIG_IDX(sig) & 31))
 #define	_SIG_VALID(sig)	((sig) <= _SIG_MAXSIG && (sig) > 0)
 
+#if 0
 typedef struct __sigset {
 	__uint32_t __bits[_SIG_WORDS];
 } __sigset_t;
+#endif
 
 #if defined(_KERNEL) && defined(COMPAT_43)
 typedef unsigned int osigset_t;
--- a/sys/amd64/include/signal.h
+++ b/sys/amd64/include/signal.h
@@ -41,11 +41,19 @@
  * Machine-dependent signal definitions
  */
 
+#if 1
+#define __need_sig_atomic_t
+#include <signal.h>
+#else
 typedef long sig_atomic_t;
+#endif
 
 #if __BSD_VISIBLE
 #include <machine/trap.h>	/* codes for SIGILL, SIGFPE */
 
+#if 1
+#include <signal.h>
+#else
 /*
  * Information pushed on stack when a signal is delivered.
  * This is used by the kernel to restore state following
@@ -104,6 +112,9 @@
 
 	long	sc_spare[4];
 };
+
+#endif
+
 #endif /* __BSD_VISIBLE */
 
 #endif /* !_MACHINE_SIGNAL_H_ */
--- a/sys/i386/include/signal.h
+++ b/sys/i386/include/signal.h
@@ -40,7 +40,12 @@
  * Machine-dependent signal definitions
  */
 
+#if 1
+#define __need_sig_atomic_t
+#include <signal.h>
+#else
 typedef int sig_atomic_t;
+#endif
 
 #if __BSD_VISIBLE
 #include <machine/trap.h>	/* codes for SIGILL, SIGFPE */
@@ -82,6 +87,9 @@
 };
 #endif
 
+#if 1
+#include <signal.h>
+#else
 /*
  * The sequence of the fields/registers in struct sigcontext should match
  * those in mcontext_t and struct trapframe.
@@ -132,6 +140,7 @@
 #define	sc_pc		sc_eip
 #define	sc_ps		sc_efl
 #define	sc_eflags	sc_efl
+#endif
 
 #endif /* __BSD_VISIBLE */
 
